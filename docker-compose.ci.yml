
services:
  backend1:
    image: simple-blockchain-node:runtime
    environment:
      SERVER_PORT: 3333
      NODE_LIBP2P_PORT: 4001
      NODE_PEERS: ""
      NODE_JWT_SECRET: changeMeSuperSecret
      NODE_WALLET_PASSWORD: changeMeSuperSecret
      NODE_GRPC_PORT: 9090
      NODE_DATA_PATH: data1
      CONSENSUS_COINBASE_MATURITY: 0
    ports:
      - "3333:3333"
      - "4001:4001"
      - "9090:9090"
    volumes:
      - ./data1:/app/data1
      - ./wallet1:/root/.simple-chain
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:3333/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 12
  frontend1:
    build:
      context: ./ui
      dockerfile: Dockerfile
      args:
        VITE_NODE_URL: http://localhost:3333/api
        VITE_NODE_WS: ws://localhost:3333/ws
        VITE_NODE_GRPC: localhost:9090
        VITE_NODE_JWT_SECRET: changeMeSuperSecret
    ports:
      - "8081:80"
    depends_on:
      backend1:
        condition: service_healthy

  backend2:
    image: simple-blockchain-node:runtime
    depends_on:
      backend1:
        condition: service_healthy
    environment:
      SERVER_PORT: 3334
      NODE_LIBP2P_PORT: 4002
      NODE_PEERS: "${BACKEND1_MULTIADDR:-backend1:4001}"
      NODE_JWT_SECRET: changeMeSuperSecret
      NODE_WALLET_PASSWORD: changeMeSuperSecret
      NODE_GRPC_PORT: 9091
      NODE_DATA_PATH: data2
      CONSENSUS_COINBASE_MATURITY: 0
    ports:
      - "3334:3334"
      - "4002:4002"
      - "9091:9091"
    volumes:
      - ./data2:/app/data2
      - ./wallet2:/root/.simple-chain
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:3334/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 12
  frontend2:
    build:
      context: ./ui
      dockerfile: Dockerfile
      args:
        VITE_NODE_URL: http://localhost:3334/api
        VITE_NODE_WS: ws://localhost:3334/ws
        VITE_NODE_GRPC: localhost:9091
        VITE_NODE_JWT_SECRET: changeMeSuperSecret
    ports:
      - "8082:80"
    depends_on:
      backend2:
        condition: service_healthy
