plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot'      version '3.5.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.4'
}

group   = 'de.flashyotter'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

configurations {
    compileOnly { extendsFrom annotationProcessor }
}

repositories {
    mavenCentral()
    maven { url 'https://dl.cloudsmith.io/public/libp2p/jvm-libp2p/maven/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://artifacts.consensys.net/public/maven/maven/' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation project(':blockchain-core')

    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'org.web3j:core:4.9.4'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.projectreactor.netty:reactor-netty-http'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.google.guava:guava:33.4.8-jre'
    implementation 'org.iq80.leveldb:leveldb:0.12'

    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.2.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // gRPC server
    implementation 'net.devh:grpc-server-spring-boot-starter:2.15.0.RELEASE'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    // Networking and concurrency
    implementation platform("io.netty:netty-bom:4.1.117.Final")
    implementation "io.libp2p:jvm-libp2p:1.2.2-RELEASE"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.25"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2"
    implementation 'org.apache.tuweni:kademlia:1.3.0'

    compileOnly          'org.projectlombok:lombok:1.18.30'
    annotationProcessor  'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly    'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

tasks.named('jacocoTestReport') {
    dependsOn 'test'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.63.0"
        }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.plugins { grpc {} }
        }
    }}