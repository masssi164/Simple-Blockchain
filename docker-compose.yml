secrets:
  zscaler_cert:
    file: ${BUILD_CA_CERT:-/dev/null}

services:
  backend:
    build:
      context: .
      dockerfile: blockchain-node/Dockerfile
      secrets: [zscaler_cert]
      args:
        SERVER_PORT: "${BACKEND_PORT}"
    env_file: .env
    environment:
      NODE_WALLET_PASSWORD: "${NODE_WALLET_PASSWORD}"
      NODE_JWT_SECRET:     "${NODE_JWT_SECRET}"
      NODE_PEERS:          "${NODE_PEERS}"
      NODE_LIBP2P_PORT:   "${NODE_LIBP2P_PORT}"
      NODE_LIBP2P_ENCRYPTED: "${NODE_LIBP2P_ENCRYPTED}"
      NODE_MINING_THREADS:     "${NODE_MINING_THREADS}"
      NODE_SNAPSHOT_INTERVAL_SEC: "${NODE_SNAPSHOT_INTERVAL_SEC}"
      NODE_HISTORY_DEPTH: "${NODE_HISTORY_DEPTH}"
      NODE_GRPC_PORT: "${NODE_GRPC_PORT}"
      # Keep container and host ports in sync
      SERVER_PORT:         "${BACKEND_PORT}"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
      - "${NODE_LIBP2P_PORT}:${NODE_LIBP2P_PORT}"
      - "${NODE_GRPC_PORT}:${NODE_GRPC_PORT}"
    restart: unless-stopped
    secrets: [zscaler_cert]
    volumes:
      - ./data1:${NODE_DATA_PATH}
      - ./wallet1:/root/.simple-chain

  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile
      args:
        VITE_NODE_URL: http://localhost:${BACKEND_PORT}/api
        VITE_NODE_LIBP2P: /ip4/127.0.0.1/tcp:${NODE_LIBP2P_PORT}
        VITE_NODE_GRPC: localhost:${NODE_GRPC_PORT}
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    env_file:
      - .env   # optional, wenn du noch Runtime-ENV im Container brauchst
    restart: unless-stopped
